import eurostat
import pandas as pd
import os

# === –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º ===
base_dir = os.path.dirname(__file__)
data_dir = os.path.join(base_dir, '../data/raw')
indicators_path = os.path.join(base_dir, '../reports/indicators.csv')

# –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
os.makedirs(data_dir, exist_ok=True)

# === –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ ===
indicators = pd.read_csv(indicators_path, sep='\t')  # –µ—Å–ª–∏ CSV —Å —Ç–∞–±–∞–º–∏
if 'code' not in indicators.columns:
    indicators = pd.read_csv(indicators_path, sep=',')  # fallback

print(f"–ù–∞–π–¥–µ–Ω–æ {len(indicators)} –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏...")

# === –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ===
for _, ind in indicators.iterrows():
    code = ind['code']
    name = ind.get('name', code)

    print(f"üîΩ –ó–∞–≥—Ä—É–∂–∞–µ–º {name} ({code}) ...")
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–µ—Å—å –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
        df = eurostat.get_data_df(code)

        # –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        print(f"  ‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {df.shape[0]} —Å—Ç—Ä–æ–∫, {df.shape[1]} –∫–æ–ª–æ–Ω–æ–∫")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ –µ—Å—Ç—å (raw)
        output_path = os.path.join(data_dir, f"{code}_raw.csv")
        df.to_csv(output_path, index=False)
        print(f"  üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤: {output_path}")

    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ {code}: {e}")

print("\n=== –ó–∞–≤–µ—Ä—à–µ–Ω–æ. –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ../data/raw/ ===")